package com.elega9t.tofu.form;

import com.elega9t.tofu.common.IconNote;
import com.elega9t.tofu.common.IconNoteTreeCellRenderer;
import com.elega9t.tofu.common.ImageUtils;
import com.elega9t.tofu.persistance.DataRepository;
import java.util.List;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author elega9t
 */
public class DataTreePanel extends javax.swing.JPanel {

    private DefaultMutableTreeNode rootNode;
    private Main main;
    private DataRepository repository;
    private String field;
    private String iconName;
    /**
     * Creates new form DataTreePanel
     */
    public DataTreePanel(Main main, DataRepository repository, String field, String iconName) {
        this.main = main;
        this.repository = repository;
        this.field = field;
        this.iconName = iconName;
        initComponents();
    }

    public void reloadTree() {
        List<String> dates;
        try {
            dates = repository.getDataPoints(this.field);
            this.rootNode.removeAllChildren();
            if (dates.size() > 0) {
                ((IconNote) this.rootNode.getUserObject()).setText(dates.size() + " " + field + " found.");
            } else {
                ((IconNote) this.rootNode.getUserObject()).setText("Nothing loaded");                
            }
            for(String date: dates) {
                this.rootNode.add(new DefaultMutableTreeNode(new IconNote(ImageUtils.loadIcon(this.iconName, 16), date)));
            }
            jTree1.expandRow(0);
            this.jTree1.repaint();
        } catch (Exception e) {
            ((IconNote) this.rootNode.getUserObject()).setText("Nothing loaded");                
            this.jTree1.repaint();
            this.main.showError(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        this.rootNode = new DefaultMutableTreeNode(new IconNote(ImageUtils.loadIcon("investigation"), ""));
        jTree1 = new javax.swing.JTree(this.rootNode);
        this.reloadTree();

        setLayout(new java.awt.BorderLayout());

        jTree1.setCellRenderer(new IconNoteTreeCellRenderer());
        jTree1.setRowHeight(24);
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        if (evt.getClickCount() == 2) {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTree1.getLastSelectedPathComponent();
            if (node == null || node == this.rootNode) return;
            IconNote note = (IconNote) node.getUserObject();
            main.showRepositorySource(repository.filteredInstance(field, note.getText()));
        }
    }//GEN-LAST:event_jTree1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
